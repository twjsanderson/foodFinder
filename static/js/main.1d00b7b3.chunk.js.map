{"version":3,"sources":["header/index.js","searchBar/index.js","actions/index.js","constants/index.js","list/list.component.js","detailsModal/index.js","list/list.container.js","pages/home.js","pages/about.js","routes.js","footer/index.js","App.js","reducers/resultsReducer.js","reducers/refinedReducer.js","reducers/detailsReducer.js","reducers/modalReducer.js","reducers/pageReducer.js","reducers/entriesReducer.js","reducers/index.js","serviceWorker.js","index.js","store/index.js"],"names":["Header","Navbar","bg","expand","Brand","className","icon","faUtensils","style","fontSize","Toggle","aria-controls","Collapse","id","Nav","to","SearchBar","Container","Row","Col","md","type","placeholder","onChange","e","props","fetchRestaurants","target","value","refineSearch","React","Component","mapDispatchToProps","city","dispatch","length","axios","get","then","response","restaurants","data","total_entries","current_page","payload","catch","error","console","log","term","getState","a","nameBasedData","filter","restaurant","name","toLowerCase","includes","addressBasedData","address","areaBasedData","area","refinedData","connect","ListView","src","this","image_url","alt","key","price","refined","postal_code","Button","onClick","restaurantDetails","state","details","onHide","show","Modal","size","centered","closeButton","Title","Body","country","phone","Footer","List","fetchRestaurant","setModalShow","map","variant","decrementRestaurants","incrementRestaurants","modalShow","page","current_city","Home","About","href","exact","path","component","faGithub","App","routes","reducer","action","rootReducer","combineReducers","resultsReducer","refinedReducer","detailsReducer","modalReducer","pageReducer","entriesReducer","Boolean","window","location","hostname","match","store","middlewares","thunk","composedEnhancer","composeWithDevTools","applyMiddleware","createStore","configureStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1d00b7b3.chunk.js","sourcesContent":["import React from 'react';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUtensils } from '@fortawesome/free-solid-svg-icons'\n\nconst Header = () => {\n    return (\n      <Navbar bg=\"primary\" expand=\"xs\">\n      <Navbar.Brand className='text-white'>\n        <FontAwesomeIcon icon={faUtensils} style={{ fontSize: '2.5em' }} />\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className='text-center'>\n          <Link to='/' className='nav-btn text-white'>Home</Link>\n          <Link to='/about' className='nav-btn text-white'>About</Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n    );\n}\n\nexport default Header;","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { fetchRestaurants, refineSearch } from '../actions';\nimport { connect } from 'react-redux'; \n\nclass SearchBar extends React.Component {\n    render() {\n        return (\n            <Container>\n                <Row className='h-100 d-flex justify-content-center align-items-end p-2'>\n                    <Col md={4}>\n                        <label className='p-2'>\n                            <h5><strong>City</strong></h5>\n                        </label>\n                        <input \n                            type='text'\n                            className='input'\n                            placeholder='Enter city name'\n                            onChange={(e) => this.props.fetchRestaurants(e.target.value)}\n                        />\n                    </Col>\n                    <Col md={4}>\n                        <label className='p-2'>\n                            <h5><strong>Filter</strong></h5>\n                        </label>\n                        <input \n                            type='text'\n                            className='input'\n                            placeholder='Search by name, address or area'\n                            onChange={(e) => this.props.refineSearch(e.target.value)} \n                        />\n                    </Col>\n                    <Col md={4} className='text-left'>\n                        <small>*Search results limited to 25 per page</small>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n};\n\nconst mapDispatchToProps = ({\n    fetchRestaurants,\n    refineSearch\n});\n\nexport default connect(null, mapDispatchToProps)(SearchBar);","import { \n    RECEIVED_RESTAURANTS, \n    REFINED_RESTAURANTS, \n    RESTAURANT_DETAILS, \n    MODAL_SHOW, \n    CURRENT_PAGE,\n    TOTAL_ENTRIES\n} from '../constants';\nimport axios from 'axios';\n\nexport const setModalShow = (value) => {\n    return (dispatch) => {\n        dispatch({ type: MODAL_SHOW, payload: value })\n    } \n};\n\nexport const incrementRestaurants = () => {\n    return (dispatch, getState) => {\n        let current_page = getState().page,\n            total_entries = getState().total_entries,\n            current_city = getState().restaurants[0].city;\n        if (current_page <= total_entries) {\n            current_page++\n            return axios.get(`http://opentable.herokuapp.com/api/restaurants?city=${current_city}&page=${current_page}`)\n                .then(response => {\n                    let restaurants = response.data.restaurants,\n                        current_page = response.data.current_page;\n                    dispatch({ type: CURRENT_PAGE, payload: current_page });\n                    dispatch({ type: RECEIVED_RESTAURANTS, payload: restaurants });\n                    dispatch({ type: REFINED_RESTAURANTS, payload: [] });\n                })\n                .catch(error => {\n                    console.log('increment error: ', error)\n                }) \n        }\n    }\n};\n\nexport const decrementRestaurants = () => {\n    return (dispatch, getState) => {\n        let current_page = getState().page,\n            current_city = getState().restaurants[0].city;\n        if (current_page > 1) {\n            current_page--\n            return axios.get(`http://opentable.herokuapp.com/api/restaurants?city=${current_city}&page=${current_page}`)\n                .then(response => {\n                    let restaurants = response.data.restaurants,\n                        current_page = response.data.current_page;\n                    dispatch({ type: CURRENT_PAGE, payload: current_page });\n                    dispatch({ type: RECEIVED_RESTAURANTS, payload: restaurants });\n                    dispatch({ type: REFINED_RESTAURANTS, payload: [] });\n                })\n                .catch(error => {\n                    console.log('decrement error: ', error)\n                })  \n        }\n    }\n};\n\nexport const fetchRestaurant = (id) => {\n    return (dispatch) => (\n        axios.get(`http://opentable.herokuapp.com/api/restaurants/${id}`)\n            .then(response => {\n                let details = response.data;\n                dispatch({ type: RESTAURANT_DETAILS, payload: details });\n            })\n            .catch(error => {\n                console.log('fetchRestaurant error: ', error)\n            })  \n    )\n}\n\nexport const fetchRestaurants = (city) => {\n    return (dispatch) => {\n        if (city.length > 0) {\n            return axios.get(`http://opentable.herokuapp.com/api/restaurants?city=${city}`)\n                .then(response => {\n                    let restaurants = response.data.restaurants,\n                        total_entries = response.data.total_entries,\n                        current_page = response.data.current_page;\n                    dispatch({ type: CURRENT_PAGE, payload: current_page });\n                    dispatch({ type: TOTAL_ENTRIES, payload: total_entries });\n                    dispatch({ type: RECEIVED_RESTAURANTS, payload: restaurants });\n                    dispatch({ type: REFINED_RESTAURANTS, payload: [] });\n                })\n                .catch(error => {\n                    console.log('fetchRestaurants error: ', error)\n                })  \n        } else {\n            dispatch({ type: RECEIVED_RESTAURANTS, payload: [] });\n            dispatch({ type: REFINED_RESTAURANTS, payload: [] });\n        }\n    }\n};\n\nexport const refineSearch = (term) => {\n    return async (dispatch, getState) => {\n        let data = getState().restaurants;\n        if (term && data) {\n            let refinedData,\n                nameBasedData = data.filter((restaurant) => restaurant.name.toLowerCase().includes(term.toLowerCase())),\n                addressBasedData = data.filter((restaurant) => restaurant.address.toLowerCase().includes(term.toLowerCase())),\n                areaBasedData = data.filter((restaurant) => restaurant.area.toLowerCase().includes(term.toLowerCase()));\n            \n            if (nameBasedData.length > 0) { \n                refinedData = nameBasedData;\n            } else if (addressBasedData.length > 0) {\n                refinedData = addressBasedData;\n            } else if (areaBasedData.length > 0) {\n                refinedData = areaBasedData;\n            } else {\n                refinedData = []\n            }\n            dispatch({ type: REFINED_RESTAURANTS, payload: refinedData });\n        }\n    }\n};","export const RECEIVED_RESTAURANTS = 'RECEIVED_RESTAURANTS';\nexport const REFINED_RESTAURANTS = 'REFINED_RESTAURANTS';\nexport const RESTAURANT_DETAILS = 'RESTAURANT_DETAILS'\nexport const MODAL_SHOW = 'MODAL_SHOW';\nexport const CURRENT_PAGE = 'CURRENT_PAGE';\nexport const TOTAL_ENTRIES = 'TOTAL_ENTRIES';","import React from 'react';\nimport { Button, Container, Row, Col } from 'react-bootstrap';\n\nclass ListView extends React.Component {\n    render() {\n        return (\n            <section>\n                <Container>\n                    <Row>\n                        <Col md={4}>\n                            <img \n                                src={this.props.restaurant.image_url}\n                                className='img-fluid p-2'\n                                alt='city restaurant'\n                            /> \n                        </Col>\n                        <Col md={8} key={this.props.restaurant.id} className='p-3'>\n                            <Row>\n                                <h5>\n                                    <strong>Name:</strong>\n                                </h5> \n                                <h5 className='pl-2'>\n                                    {this.props.restaurant.name}\n                                </h5>\n                            </Row>\n                            <Row>\n                                <h5>\n                                    <strong>Address:</strong>\n                                </h5> \n                                <h5 className='pl-2'>\n                                    {this.props.restaurant.address}\n                                </h5>\n                            </Row>\n                            <Row >\n                                <h5>\n                                    <strong>Price:</strong>\n                                </h5> \n                                <h5 className='pl-2'>\n                                    {this.props.restaurant.price}\n                                </h5>\n                            </Row>\n                            {\n                                this.props.refined ?\n                                (\n                                    <>\n                                        <Row> \n                                            <h5>\n                                                <strong>Postal Code:</strong>\n                                            </h5> \n                                            <h5 className='pl-2'>\n                                            {this.props.restaurant.postal_code}\n                                            </h5>\n                                        </Row>\n                                        <Row> \n                                            <h5>\n                                                <strong>Area:</strong>\n                                            </h5> \n                                            <h5 className='pl-2'>\n                                                {this.props.restaurant.area}\n                                            </h5>\n                                        </Row>\n                                    </>\n                                ) : \n                                null\n                            }  \n                            <Row>\n                                <Button \n                                    onClick={() => this.props.restaurantDetails(this.props.restaurant.id)}\n                                >\n                                    Details\n                                </Button>\n                            </Row>\n                        </Col>\n                    </Row>\n                </Container>\n            </section>\n        )\n    }\n};\n\nexport default ListView;    ","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, Button, Row } from 'react-bootstrap';\n\nconst DetailsModal = ({ onHide, restaurant, show }) => {\n    return (\n      <Modal\n        show={show}\n        size=\"lg\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title >\n            <h2>{restaurant.name}</h2>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Row className='p-2'>\n            <h4>\n              <strong>Addresss:</strong>\n            </h4> \n            <h4 className='pl-2'>\n              {restaurant.address}\n            </h4>\n          </Row>\n          <Row className='p-2'>\n            <h4>\n              <strong>Postal Code:</strong>\n            </h4> \n            <h4 className='pl-2'>\n              {restaurant.postal_code}\n            </h4>\n          </Row>\n          <Row className='p-2'>\n            <h4>\n              <strong>City:</strong>\n            </h4> \n            <h4 className='pl-2'>\n              {restaurant.city}\n            </h4>\n          </Row>\n          <Row className='p-2'>\n            <h4>\n              <strong>State:</strong>\n            </h4> \n            <h4 className='pl-2'>\n              {restaurant.state}\n            </h4>\n          </Row>\n          <Row className='p-2'>\n            <h4>\n              <strong>Country:</strong>\n            </h4> \n            <h4 className='pl-2'>\n              {restaurant.country}\n            </h4>\n          </Row>\n          <Row className='p-2'>\n            <h4>\n              <strong>Phone:</strong>\n            </h4> \n            <h4 className='pl-2'>\n              {restaurant.phone}\n            </h4>\n          </Row>\n          <Row className='p-2'>\n            <h4>\n              <strong>Price:</strong>\n            </h4> \n            <h4 className='pl-2'>\n              {restaurant.price}\n            </h4>\n          </Row>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={onHide}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      restaurant: state.details\n  }\n};\n\nexport default connect(mapStateToProps)(DetailsModal);","import React from 'react';\nimport { Container, Button, Row, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { fetchRestaurant, setModalShow, incrementRestaurants, decrementRestaurants } from '../actions';\n\n// Components\nimport ListView from './list.component';\nimport DetailsModal from '../detailsModal';\n\nclass List extends React.Component {\n\n    restaurantDetails = (id) => {\n        this.props.fetchRestaurant(id)\n        this.props.setModalShow(true)\n    }\n\n    render() {\n        return (\n            <Container>\n                <ul>\n                    {\n                        this.props.refined.length > 0 ?\n                            this.props.refined.map(restaurant => {\n                                return (\n                                    <ListView \n                                        key={restaurant.id}\n                                        restaurant={restaurant} \n                                        refined={true} \n                                        restaurantDetails={this.restaurantDetails}\n                                    />\n                                )\n                            }) : this.props.restaurants.length > 0 ? \n                                this.props.restaurants.map(restaurant => {\n                                    return (\n                                        <ListView \n                                            key={restaurant.id}\n                                            restaurant={restaurant} \n                                            refined={false} \n                                            restaurantDetails={this.restaurantDetails}\n                                        />\n                                    )\n                                }) : \n                                <h4 className='text-center p-2 mr-5 text-primary'>Start by entering your city name!</h4>\n                    }\n                </ul>\n                <Row>\n                    <Col className='text-left'>\n                        {\n                            this.props.refined.length > 0 || this.props.restaurants.length > 0 ?\n                                <Button variant='secondary' onClick={() => this.props.decrementRestaurants()}>Back</Button> :\n                                null\n                        }\n                    </Col>\n                    <Col className='text-right'>\n                        {\n                            this.props.refined.length > 0 || this.props.restaurants.length > 0 ?\n                                <Button variant='secondary' onClick={() => this.props.incrementRestaurants()}>Next</Button> :\n                                null\n                        }\n                    </Col>\n                </Row>\n                <DetailsModal\n                    id={this.props.restaurants}\n                    show={this.props.modalShow}\n                    onHide={() => this.props.setModalShow(false)}\n                />\n            </Container>\n        );\n    }\n};\n\nconst mapStateToProps = (state) => {\n    return { \n        restaurants: state.restaurants,\n        refined: state.refined,\n        modalShow: state.modalShow\n    }\n};\n\nconst mapDispatchToProps = ({\n    fetchRestaurant,\n    setModalShow,\n    incrementRestaurants,\n    decrementRestaurants\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\n","import React from 'react';\nimport './index.css';\nimport { Container, Row, Col } from 'react-bootstrap';\n\n// Components\nimport SearchBar from '../searchBar';\nimport List from '../list/list.container';\n\nclass Home extends React.Component {\n    render() {\n        return (\n            <section>\n                <Container className='p-1'>\n                    <Row className='justify-content-center text-center py-3'>\n                        <Col md={10}>\n                            <h1 className='title'>Food Finder</h1>\n                            <h2 className='subtitle'>Connecting hungry people with good food</h2>\n                        </Col>\n                    </Row>\n                    <Row className='justify-content-center py-3'>\n                        <Col md={10}>\n                            <SearchBar />\n                            <List />\n                        </Col>\n                    </Row>\n                </Container>\n            </section>\n        )\n    }\n}\n\nexport default Home;","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nclass About extends React.Component {\n    render() {\n        return (\n            <Container className='p-1'>\n                <Row className='justify-content-center text-center py-3'>\n                    <Col md={9}>\n                        <h1 className='title'>About</h1>\n                        <h2 className='subtitle'>Food Finder: A Project by Tom Sanderson</h2>\n                        <hr />\n                        <br/>\n                        <p>\n                            The Food Finder app was created to help people find the best restaurants in \n                            major cities across Canada and the United States. \n                            It was built with React/Redux, Bootstrap 4 and restaurant data pulled from the \n                            <a href='https://opentable.herokuapp.com/'> Opentable API</a>. \n                        </p>\n                        <br />\n                        <p>\n                            Send questions and inquiries to Tom at <span className='text-primary'>twjsanderson@yahoo.ca</span> \n                            or checkout his <a href='https://portfolio-8af66.firebaseapp.com/'>portfolio</a>. \n                            To look at the Food Finder source code take a look at his Github Repo.\n                        </p>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default About;","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\n// Pages\nimport Home from './pages/home';\nimport About from './pages/about';\n\nexport default (\n    <Switch>\n        <Route exact path='/' component={Home} />\n        <Route exact path='/about' component={About} />\n        <Redirect path=\"*\" to=\"/\" />\n    </Switch>\n)","import React from 'react';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\n\nconst Footer = () => {\n    return (\n      <Navbar bg=\"primary\" expand=\"lg\">\n          <Nav className=\"mx-auto\">\n            <FontAwesomeIcon icon={faGithub} style={{ fontSize: '2.5em' }} />\n          </Nav>\n      </Navbar>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n// Components\nimport Header from './header';\nimport routes from './routes';\nimport Footer from './footer';\n\nconst App = () => {\n  return (\n      <Router>\n        <Header />\n          <section id='app'>\n            {routes}\n          </section>\n        <Footer />\n      </Router>\n  );\n}\n\nexport default App;\n","import { RECEIVED_RESTAURANTS } from '../constants';\n\nconst reducer = (state = [], action) => {\n    switch(action.type) {\n        case RECEIVED_RESTAURANTS:\n            return action.payload;\n        default:\n            return state;\n    }\n}; \n\nexport default reducer;","import { REFINED_RESTAURANTS } from '../constants';\n\nconst reducer = (state = [], action) => {\n    switch(action.type) {\n        case REFINED_RESTAURANTS:\n            return action.payload;\n        default:\n            return state;\n    }\n}; \n\nexport default reducer;","import { RESTAURANT_DETAILS } from '../constants';\n\nconst reducer = (state = [], action) => {\n    switch(action.type) {\n        case RESTAURANT_DETAILS:\n            return action.payload;\n        default:\n            return state;\n    }\n}; \n\nexport default reducer;","import { MODAL_SHOW } from '../constants';\n\nconst reducer = (state = false, action) => {\n    switch(action.type) {\n        case MODAL_SHOW:\n            return action.payload;\n        default:\n            return state;\n    }\n}; \n\nexport default reducer;","import { CURRENT_PAGE } from '../constants';\n\nconst reducer = (state = [], action) => {\n    switch(action.type) {\n        case CURRENT_PAGE:\n            return action.payload;\n        default:\n            return state;\n    }\n}; \n\nexport default reducer;","import { TOTAL_ENTRIES } from '../constants';\n\nconst reducer = (state = [], action) => {\n    switch(action.type) {\n        case TOTAL_ENTRIES:\n            return action.payload;\n        default:\n            return state;\n    }\n}; \n\nexport default reducer;","import { combineReducers } from 'redux';\nimport resultsReducer from './resultsReducer';\nimport refinedReducer from './refinedReducer';\nimport detailsReducer from './detailsReducer';\nimport modalReducer from './modalReducer';\nimport pageReducer from './pageReducer';\nimport entriesReducer from './entriesReducer';\n\nconst rootReducer = combineReducers({\n    restaurants: resultsReducer,\n    refined: refinedReducer,\n    details: detailsReducer,\n    modalShow: modalReducer,\n    page: pageReducer,\n    total_entries: entriesReducer\n});\n\nexport default rootReducer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { configureStore } from './store';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../reducers';\n\n\nexport const configureStore = () => {\n    const middlewares = [thunk];\n    const composedEnhancer = composeWithDevTools(\n        applyMiddleware(...middlewares)\n    );\n\n    const store = createStore(rootReducer, composedEnhancer);\n   \n    return store;\n};\n\n"],"sourceRoot":""}